{"version":3,"sources":["components/Header.js","components/Form.js","components/Preview.js","App.js","index.js"],"names":["Header","React","Component","Form","props","addBlock","e","blockType","target","parentNode","id","addObj","delBlock","block","blockIndex","Array","from","children","indexOf","console","log","delObj","updatePersonal","updateExperience","updateEducation","experiences","i","this","experience","length","addButton","type","className","onClick","delButton","buttonArea","exp","placeholder","value","company","onChange","position","start","end","descr","educations","education","edu","program","uni","Preview","App","form","setState","personal","name","title","phone","email","location","objective","section","selection","prevExp","state","prevEdu","index","oldExp","slice","oldEdu","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAceA,E,kDAXX,aAAe,wC,0CAIf,WACI,OACI,4B,GAPSC,IAAMC,WC0HZC,E,kDAzHX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAGVC,SAAW,SAACC,GACR,IAAMC,EAAYD,EAAEE,OAAOC,WAAWA,WAAWA,WAAWC,GAE5D,EAAKN,MAAMO,OAAOJ,IAPH,EAUnBK,SAAW,SAACN,GACR,IAAMO,EAAQP,EAAEE,OAAOC,WAAWA,WAC5BF,EAAYM,EAAMJ,WAAWC,GAC7BI,EAAaC,MAAMC,KAAKH,EAAMJ,WAAWQ,UAAUC,QAAQL,GAAS,EAE1EM,QAAQC,IAAIb,GACZY,QAAQC,IAAIN,GACZ,EAAKV,MAAMiB,OAAOd,EAAWO,IAjBd,EAoBnBQ,eAAiB,SAAChB,GACd,EAAKF,MAAMkB,eAAehB,IArBX,EAwBnBiB,iBAAmB,SAACjB,GAChB,EAAKF,MAAMmB,iBAAiBjB,IAzBb,EA4BnBkB,gBAAkB,SAAClB,GACf,EAAKF,MAAMoB,gBAAgBlB,IA7BZ,E,0CAgCnB,WAGI,IAFA,IAAImB,EAAc,GAETC,EAAI,EAAGA,EAAIC,KAAKvB,MAAMwB,WAAWC,OAAQH,IAAK,CACnD,IAAIb,EACEiB,EAAY,wBAAQC,KAAK,SAASC,UAAU,aAAaC,QAASN,KAAKtB,SAA3D,iBACZ6B,EAAY,wBAAQH,KAAK,SAASC,UAAU,aAAaC,QAASN,KAAKf,SAA3D,oBACduB,OAAU,EACVC,EAAMT,KAAKvB,MAAMwB,WAAWF,GAG5BS,EADgC,GAAhCR,KAAKvB,MAAMwB,WAAWC,OACT,8BAAMC,IACZJ,GAAKC,KAAKvB,MAAMwB,WAAWC,OAAS,EAC9B,8BAAMK,IAEN,gCAAMJ,EAAWI,KAGlCrB,EACI,sBAAKmB,UAAU,YAAf,UACI,uBAAOD,KAAK,OAAOM,YAAY,UAAUC,MAAOF,EAAIG,QAASC,SAAUb,KAAKJ,mBAC5E,uBAAOQ,KAAK,OAAOM,YAAY,WAAWC,MAAOF,EAAIK,SAAUD,SAAUb,KAAKJ,mBAC9E,uBAAOQ,KAAK,OAAOM,YAAY,aAAaC,MAAOF,EAAIM,MAAOF,SAAUb,KAAKJ,mBAC7E,uBAAOQ,KAAK,OAAOM,YAAY,WAAWC,MAAOF,EAAIO,IAAKH,SAAUb,KAAKJ,mBACzE,uBAAOQ,KAAK,OAAOM,YAAY,cAAcC,MAAOF,EAAIQ,MAAOJ,SAAUb,KAAKJ,mBAC7EY,KAITV,EAAW,sBAAOA,GAAP,CAAoBZ,IAKnC,IAFA,IAAIgC,EAAa,GAERnB,EAAI,EAAGA,EAAIC,KAAKvB,MAAM0C,UAAUjB,OAAQH,IAAK,CAClD,IAAIb,EACEiB,EAAY,wBAAQC,KAAK,SAASC,UAAU,aAAaC,QAASN,KAAKtB,SAA3D,iBACZ6B,EAAY,wBAAQH,KAAK,SAASC,UAAU,aAAaC,QAASN,KAAKf,SAA3D,oBACduB,OAAU,EACVY,EAAMpB,KAAKvB,MAAM0C,UAAUpB,GAG3BS,EAD+B,GAA/BR,KAAKvB,MAAM0C,UAAUjB,OACR,8BAAMC,IACZJ,GAAKC,KAAKvB,MAAM0C,UAAUjB,OAAS,EAC7B,8BAAMK,IAEN,gCAAMJ,EAAWI,KAGlCrB,EACI,sBAAKmB,UAAU,YAAf,UACI,uBAAOD,KAAK,OAAOM,YAAY,UAAUC,MAAOS,EAAIC,QAASR,SAAUb,KAAKH,kBAC5E,uBAAOO,KAAK,OAAOM,YAAY,aAAaC,MAAOS,EAAIE,IAAKT,SAAUb,KAAKH,kBAC3E,uBAAOO,KAAK,OAAOM,YAAY,aAAaC,MAAOS,EAAIL,MAAOF,SAAUb,KAAKH,kBAC7E,uBAAOO,KAAK,OAAOM,YAAY,WAAWC,MAAOS,EAAIJ,IAAKH,SAAUb,KAAKH,kBACzE,uBAAOO,KAAK,OAAOM,YAAY,cAAcC,MAAOS,EAAIH,MAAOJ,SAAUb,KAAKH,kBAC7EW,KAITU,EAAU,sBAAOA,GAAP,CAAmBhC,IAGjC,OACI,sBAAKH,GAAG,OAAR,UACI,sBAAKA,GAAG,WAAR,UACI,sDACA,sBAAKsB,UAAU,iBAAf,UACI,uBAAOD,KAAK,OAAOM,YAAY,OAAOG,SAAUb,KAAKL,iBACrD,uBAAOS,KAAK,OAAOM,YAAY,QAAQG,SAAUb,KAAKL,iBACtD,uBAAOS,KAAK,OAAOM,YAAY,QAAQG,SAAUb,KAAKL,iBACtD,uBAAOS,KAAK,OAAOM,YAAY,QAAQG,SAAUb,KAAKL,iBACtD,uBAAOS,KAAK,OAAOM,YAAY,WAAWG,SAAUb,KAAKL,iBACzD,uBAAOS,KAAK,OAAOM,YAAY,YAAYG,SAAUb,KAAKL,uBAGlE,sBAAKZ,GAAG,aAAR,UACI,iDACCe,KAEL,sBAAKf,GAAG,YAAR,UACI,2CACCmC,Y,GAnHF5C,IAAMC,WCYVgD,E,kDAXX,aAAe,wC,0CAIf,WACI,OACI,4B,GAPUjD,IAAMC,WCmKbiD,E,kDA9Jb,aAAe,IAAD,8BACZ,gBA4BF7B,eAAiB,SAAChB,GAChB,IAAM8C,EAAO9C,EAAEE,OAAOC,WAEtB,EAAK4C,SAAS,CACZC,SAAU,CACRC,KAAMH,EAAKnC,SAAS,GAAGqB,MACvBkB,MAAOJ,EAAKnC,SAAS,GAAGqB,MACxBmB,MAAOL,EAAKnC,SAAS,GAAGqB,MACxBoB,MAAON,EAAKnC,SAAS,GAAGqB,MACxBqB,SAAUP,EAAKnC,SAAS,GAAGqB,MAC3BsB,UAAWR,EAAKnC,SAAS,GAAGqB,UAvCpB,EA4Cdf,iBAAmB,SAACjB,GAIlB,IAHA,IAAM8C,EAAO9C,EAAEE,OAAOC,WAAWA,WAC7BgB,EAAc,GAETC,EAAI,EAAGA,EAAI0B,EAAKnC,SAASY,OAAQH,IAAK,CAC7C,IAAMmC,EAAUT,EAAKnC,SAASS,GAExBU,EAAM,CACVG,QAASsB,EAAQ5C,SAAS,GAAGqB,MAC7BG,SAAUoB,EAAQ5C,SAAS,GAAGqB,MAC9BI,MAAOmB,EAAQ5C,SAAS,GAAGqB,MAC3BK,IAAKkB,EAAQ5C,SAAS,GAAGqB,MACzBM,MAAOiB,EAAQ5C,SAAS,GAAGqB,OAG7Bb,EAAW,sBAAOA,GAAP,CAAoBW,IAGjC,EAAKiB,SAAS,CACZzB,WAAYH,KA/DF,EAmEdD,gBAAkB,SAAClB,GAIjB,IAHA,IAAM8C,EAAO9C,EAAEE,OAAOC,WAAWA,WAC7BoC,EAAa,GAERnB,EAAI,EAAGA,EAAI0B,EAAKnC,SAASY,OAAQH,IAAK,CAC7C,IAAMmC,EAAUT,EAAKnC,SAASS,GAExBqB,EAAM,CACVC,QAASa,EAAQ5C,SAAS,GAAGqB,MAC7BW,IAAKY,EAAQ5C,SAAS,GAAGqB,MACzBI,MAAOmB,EAAQ5C,SAAS,GAAGqB,MAC3BK,IAAKkB,EAAQ5C,SAAS,GAAGqB,MACzBM,MAAOiB,EAAQ5C,SAAS,GAAGqB,OAG7BO,EAAU,sBAAOA,GAAP,CAAmBE,IAG/B,EAAKM,SAAS,CACZP,UAAWD,KAtFD,EA0FdlC,OAAS,SAACmD,GACR,GAAiB,cAAbA,EAA2B,CAC3B,IAAMC,EAAU,EAAKC,MAAMpC,WAS3B,EAAKyB,SAAS,CACVzB,WAAW,GAAD,mBAAMmC,GAAN,CATC,CACbxB,QAAS,GACTE,SAAU,GACVC,MAAO,GACPC,IAAK,GACLC,MAAO,aAMN,GAAiB,aAAbkB,EAA0B,CACjC,IAAMG,EAAU,EAAKD,MAAMlB,UAS3B,EAAKO,SAAS,CACVP,UAAU,GAAD,mBAAMmB,GAAN,CATE,CACbjB,QAAS,GACTC,IAAK,GACLP,MAAO,GACPC,IAAK,GACLC,MAAO,UA/GD,EAwHdvB,OAAS,SAACyC,EAAWI,GACnB,GAAiB,cAAbJ,EAA2B,CAC3B,IAAMK,EAAS,EAAKH,MAAMpC,WACpBH,EAAW,sBAAO0C,EAAOC,MAAM,EAAGF,IAAvB,YAAkCC,EAAOC,MAAMF,EAAQ,KAExE,EAAKb,SAAS,CACZzB,WAAYH,SAEX,GAAiB,aAAbqC,EAA0B,CACjC,IAAMO,EAAS,EAAKL,MAAMlB,UACpBD,EAAU,sBAAOwB,EAAOD,MAAM,EAAGF,IAAvB,YAAkCG,EAAOD,MAAMF,EAAQ,KAEvE,EAAKb,SAAS,CACZP,UAAWD,MAlIjB,EAAKmB,MAAQ,CACXV,SAAU,CACRC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,UAAW,IAEbhC,WAAY,CAAC,CACXW,QAAS,GACTE,SAAU,GACVC,MAAO,GACPC,IAAK,GACLC,MAAO,KAETE,UAAW,CAAC,CACVE,QAAS,GACTC,IAAK,GACLP,MAAO,GACPC,IAAK,GACLC,MAAO,MAxBC,E,0CA0Id,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEtB,eAAgBK,KAAKL,eACrBgC,SAAU3B,KAAKqC,MAAMV,SACrB/B,iBAAkBI,KAAKJ,iBACvBK,WAAYD,KAAKqC,MAAMpC,WACvBJ,gBAAiBG,KAAKH,gBACtBsB,UAAWnB,KAAKqC,MAAMlB,UACtBnC,OAAQgB,KAAKhB,OACbU,OAAQM,KAAKN,SAEf,cAAC,EAAD,W,GAzJUpB,IAAMC,WCDxBoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e9b1fdf0.chunk.js","sourcesContent":["import React from 'react'\n\nclass Header extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return(\n            <div></div>\n        )\n    }\n}\n\nexport default Header","import React from 'react'\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    addBlock = (e) => {\n        const blockType = e.target.parentNode.parentNode.parentNode.id\n\n        this.props.addObj(blockType)\n    }\n\n    delBlock = (e) => {\n        const block = e.target.parentNode.parentNode\n        const blockType = block.parentNode.id\n        const blockIndex = Array.from(block.parentNode.children).indexOf(block) - 1\n\n        console.log(blockType)\n        console.log(blockIndex)\n        this.props.delObj(blockType, blockIndex)\n    }\n\n    updatePersonal = (e) => {\n        this.props.updatePersonal(e)\n    }\n\n    updateExperience = (e) => {\n        this.props.updateExperience(e)\n    }\n\n    updateEducation = (e) => {\n        this.props.updateEducation(e)\n    }\n\n    render() {\n        let experiences = []\n                    \n        for (let i = 0; i < this.props.experience.length; i++) {\n            let block\n            const addButton = <button type='button' className='add-button' onClick={this.addBlock}>Add</button>\n            const delButton = <button type='button' className='del-button' onClick={this.delBlock}>Delete</button>\n            let buttonArea\n            let exp = this.props.experience[i]\n            \n            if (this.props.experience.length == 1) {\n                buttonArea = <div>{addButton}</div>\n            } else if (i != this.props.experience.length - 1 ) {\n                buttonArea = <div>{delButton}</div>\n            } else {\n                buttonArea = <div>{addButton}{delButton}</div>\n            }\n\n            block = (\n                <div className='exp-block'>\n                    <input type='text' placeholder='Company' value={exp.company} onChange={this.updateExperience}/>\n                    <input type='text' placeholder='Position' value={exp.position} onChange={this.updateExperience}/>\n                    <input type='text' placeholder='Start Date' value={exp.start} onChange={this.updateExperience}/>\n                    <input type='text' placeholder='End Date' value={exp.end} onChange={this.updateExperience}/>\n                    <input type='text' placeholder='Description' value={exp.descr} onChange={this.updateExperience}/>\n                    {buttonArea}\n                </div>\n            )\n\n            experiences = [...experiences, block]\n        }\n\n        let educations = []\n\n        for (let i = 0; i < this.props.education.length; i++) {\n            let block\n            const addButton = <button type='button' className='add-button' onClick={this.addBlock}>Add</button>\n            const delButton = <button type='button' className='del-button' onClick={this.delBlock}>Delete</button>\n            let buttonArea\n            let edu = this.props.education[i]\n\n            if (this.props.education.length == 1) {\n                buttonArea = <div>{addButton}</div>\n            } else if (i != this.props.education.length - 1 ) {\n                buttonArea = <div>{delButton}</div>\n            } else {\n                buttonArea = <div>{addButton}{delButton}</div>\n            }\n\n            block = (\n                <div className='edu-block'>\n                    <input type='text' placeholder='Program' value={edu.program} onChange={this.updateEducation}/>\n                    <input type='text' placeholder='University' value={edu.uni} onChange={this.updateEducation}/>\n                    <input type='text' placeholder='Start Date' value={edu.start} onChange={this.updateEducation}/>\n                    <input type='text' placeholder='End Date' value={edu.end} onChange={this.updateEducation}/>\n                    <input type='text' placeholder='Description' value={edu.descr} onChange={this.updateEducation}/>\n                    {buttonArea}\n                </div>\n            )\n\n            educations = [...educations, block]\n        }\n\n        return (\n            <div id='form'>\n                <div id='personal'>\n                    <h2>Personal Information</h2>\n                    <div className='personal-block'>\n                        <input type='text' placeholder='Name' onChange={this.updatePersonal}/>\n                        <input type='text' placeholder='Title' onChange={this.updatePersonal}/>\n                        <input type='text' placeholder='Email' onChange={this.updatePersonal}/>\n                        <input type='text' placeholder='Phone' onChange={this.updatePersonal}/>\n                        <input type='text' placeholder='Location' onChange={this.updatePersonal}/>\n                        <input type='text' placeholder='Objective' onChange={this.updatePersonal}/>\n                    </div>\n                </div>\n                <div id='experience'>\n                    <h2>Work Experience</h2>\n                    {experiences}\n                </div>\n                <div id='education'>\n                    <h2>Education</h2>\n                    {educations}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Form","import React from 'react'\n\nclass Preview extends React.Component {\n    constructor() {\n        super()\n    }\n\n    render() {\n        return (\n            <div></div>\n        )\n    }\n}\n\nexport default Preview","import React from 'react'\nimport './stylesheets/App.css'\nimport Header from './components/Header.js'\nimport Form from './components/Form.js'\nimport Preview from './components/Preview.js'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      personal: {\n        name: '',\n        title: '',\n        phone: '',\n        email: '',\n        location: '',\n        objective: ''\n      },\n      experience: [{\n        company: '',\n        position: '',\n        start: '',\n        end: '',\n        descr: ''\n      }],\n      education: [{\n        program: '',\n        uni: '',\n        start: '',\n        end: '',\n        descr: ''\n      }]\n    }\n  }\n\n  updatePersonal = (e) => {\n    const form = e.target.parentNode\n\n    this.setState({\n      personal: {\n        name: form.children[0].value,\n        title: form.children[1].value,\n        phone: form.children[2].value,\n        email: form.children[3].value,\n        location: form.children[4].value,\n        objective: form.children[5].value\n      }\n    })\n  }\n\n  updateExperience = (e) => {\n    const form = e.target.parentNode.parentNode\n    let experiences = []\n\n    for (let i = 1; i < form.children.length; i++) {\n      const section = form.children[i]\n\n      const exp = {\n        company: section.children[0].value,\n        position: section.children[1].value,\n        start: section.children[2].value,\n        end: section.children[3].value,\n        descr: section.children[4].value,\n      }\n\n      experiences = [...experiences, exp]\n    }\n\n    this.setState({\n      experience: experiences\n    })\n  }\n\n  updateEducation = (e) => {\n    const form = e.target.parentNode.parentNode\n    let educations = []\n\n    for (let i = 1; i < form.children.length; i++) {\n      const section = form.children[i]\n\n      const edu = {\n        program: section.children[0].value,\n        uni: section.children[1].value,\n        start: section.children[2].value,\n        end: section.children[3].value,\n        descr: section.children[4].value,\n      }\n\n      educations = [...educations, edu]\n    }\n\n    this.setState({\n      education: educations\n    })\n  }\n\n  addObj = (selection) => {\n    if (selection == 'experience') {\n        const prevExp = this.state.experience\n        const newExp = {\n          company: '',\n          position: '',\n          start: '',\n          end: '',\n          descr: ''\n        }\n\n        this.setState({\n            experience: [...prevExp, newExp]\n        })\n    } else if (selection == 'education') {\n        const prevEdu = this.state.education\n        const newEdu = {\n          program: '',\n          uni: '',\n          start: '',\n          end: '',\n          descr: ''\n        }\n\n        this.setState({\n            education: [...prevEdu, newEdu]\n        })\n    }\n  }\n\n  delObj = (selection, index) => {\n    if (selection == 'experience') {\n        const oldExp = this.state.experience\n        const experiences = [...oldExp.slice(0, index), ...oldExp.slice(index + 1)]\n\n        this.setState({\n          experience: experiences\n        })\n    } else if (selection == 'education') {\n        const oldEdu = this.state.education\n        const educations = [...oldEdu.slice(0, index), ...oldEdu.slice(index + 1)]\n\n        this.setState({\n          education: educations\n        })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Form \n          updatePersonal={this.updatePersonal}\n          personal={this.state.personal}\n          updateExperience={this.updateExperience}\n          experience={this.state.experience}\n          updateEducation={this.updateEducation}\n          education={this.state.education}\n          addObj={this.addObj}\n          delObj={this.delObj}\n        />\n        <Preview />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}